{"ast":null,"code":"var _jsxFileName = \"/home/coded/git/Twitter/twitter-clone/src/Components/TweetWrite.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport \"../CSS/TweetWrite.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TweetWrite = () => {\n  _s();\n\n  const profileImage = localStorage.getItem(\"pp\") || \"\";\n  const [tweet, setTweet] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n\n  const Tweet = e => {\n    const url = \"http://localhost:5000/api/tweet-upload\";\n    const token = localStorage.getItem(\"sid\");\n    const data = new FormData();\n    data.append(\"tweet\", tweet);\n    data.append(\"file\", file);\n    axios.post(url, data, {\n      headers: {\n        \"x-auth-token\": token\n      }\n    }).then(response => {\n      console.log(response);\n      alert(response.data.msg);\n      setTweet(\"\");\n      setFile(\"\");\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetWriteContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeTitle\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TweetWrite\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        alt: \"User\",\n        src: profileImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What's happening?\",\n        size: \"60\",\n        onChange: e => setTweet(e.target.value),\n        value: tweet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweetFileUpload\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: tweet === \"\",\n          onClick: Tweet,\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TweetWrite, \"ETeWTvb+3orvZG1CxDghwIl3dx4=\");\n\n_c = TweetWrite;\nexport default TweetWrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetWrite\");","map":{"version":3,"sources":["/home/coded/git/Twitter/twitter-clone/src/Components/TweetWrite.jsx"],"names":["React","useState","Avatar","axios","TweetWrite","profileImage","localStorage","getItem","tweet","setTweet","file","setFile","Tweet","e","url","token","data","FormData","append","post","headers","then","response","console","log","alert","msg","catch","error","target","value","files"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Avatar from '@material-ui/core/Avatar';\nimport \"../CSS/TweetWrite.css\"\nimport axios from 'axios'\n\nconst TweetWrite = () => {\n\n    const profileImage = localStorage.getItem(\"pp\") || \"\";\n    const [tweet, setTweet] = useState(\"\");\n    const [file, setFile] = useState(\"\");\n\n    const Tweet = (e) => {\n        const url = \"http://localhost:5000/api/tweet-upload\";\n        const token = localStorage.getItem(\"sid\");\n\n        const data = new FormData();\n        data.append(\"tweet\", tweet);\n        data.append(\"file\",file);\n\n        axios\n            .post(url, data, {\n                headers:{\n                    \"x-auth-token\":token,\n                },\n            })\n            .then((response) =>{\n                console.log(response);\n                alert(response.data.msg);\n                setTweet(\"\");\n                setFile(\"\");\n            })\n            .catch((error)=>{\n                console.log(error);\n            })\n    }\n\n    return (\n        <div className=\"tweetWriteContainer\">\n            <div className=\"homeTitle\">\n                <h3>Home</h3>\n            </div>\n                <div className=\"TweetWrite\">\n                <Avatar alt=\"User\" src={profileImage} />\n                <input type=\"text\" placeholder=\"What's happening?\" size=\"60\" onChange={(e)=> setTweet(e.target.value)} value={tweet}/>\n                </div>\n                <div className=\"tweetFileUpload\">\n                    <div className=\"file\">\n                    <input type=\"file\" onChange={(e)=>setFile(e.target.files[0])}/>\n                    </div>\n                    <div className=\"tweetButton\">\n                        <button disabled={tweet === \"\"} onClick={Tweet}>Tweet</button>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\nexport default TweetWrite\n"]},"metadata":{},"sourceType":"module"}