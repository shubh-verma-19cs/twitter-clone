{"ast":null,"code":"var _jsxFileName = \"/home/coded/ReactJS/Twitter/twitter-clone/src/Components/HomeFeed.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"../CSS/HomeFeed.css\";\nimport Avatar from '@material-ui/core/Avatar';\nimport TweetWrite from './TweetWrite';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomeFeed = () => {\n  _s();\n\n  const [tweets, setTweets] = useState([]);\n  const [mounted, setMounted] = useState(true);\n  useEffect(() => {\n    const loadData = async function () {\n      const url = \"http://localhost:5000/api/feeds\";\n      const {\n        data\n      } = await axios.get(url);\n\n      if (mounted) {\n        setTweets(data);\n      }\n    };\n\n    loadData();\n    return () => {\n      setMounted(false);\n    };\n  }, [mounted]);\n  console.log(tweets);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homeFeedContainer\",\n    children: [/*#__PURE__*/_jsxDEV(TweetWrite, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: tweets && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed\",\n        children: tweets.map(tweet => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"userProf\",\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"User\",\n                src: \"../../../public/arch-linux-icon.svg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweet\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"User\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"@user\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomeFeed, \"HL/mawUM8vK+shNCt3TjlbWrlnc=\");\n\n_c = HomeFeed;\nexport default HomeFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeFeed\");","map":{"version":3,"sources":["/home/coded/ReactJS/Twitter/twitter-clone/src/Components/HomeFeed.jsx"],"names":["React","useEffect","useState","Avatar","TweetWrite","axios","HomeFeed","tweets","setTweets","mounted","setMounted","loadData","url","data","get","console","log","map","tweet"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,qBAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMU,QAAQ,GAAI,kBAAgB;AAC9B,YAAMC,GAAG,GAAG,iCAAZ;AACA,YAAM;AAACC,QAAAA;AAAD,UAAS,MAAMR,KAAK,CAACS,GAAN,CAAUF,GAAV,CAArB;;AACA,UAAGH,OAAH,EAAW;AACPD,QAAAA,SAAS,CAACK,IAAD,CAAT;AACH;AACJ,KAND;;AAQAF,IAAAA,QAAQ;AACR,WAAO,MAAI;AACPD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAFD;AAGH,GAbQ,EAaN,CAACD,OAAD,CAbM,CAAT;AAcJM,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACI,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACIA,MAAM,iBAAI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAEFA,MAAM,CAACU,GAAP,CAAWC,KAAK,IAAE;AACd,8BAAQ;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACJ;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,qCACA,QAAC,MAAD;AAAQ,gBAAA,GAAG,EAAC,MAAZ;AAAmB,gBAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBADI,eAIJ;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJI;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AAWH,SAZD;AAFE;AAAA;AAAA;AAAA;AAAA;AADd;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA7CD;;GAAMZ,Q;;KAAAA,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState } from 'react'\nimport \"../CSS/HomeFeed.css\"\nimport Avatar from '@material-ui/core/Avatar';\nimport TweetWrite from './TweetWrite'\nimport axios from 'axios'\nconst HomeFeed = () => {\n    const [tweets, setTweets] = useState([]);\n    const [mounted, setMounted] = useState(true);\n\n    useEffect(()=>{\n        const loadData =  async function(){\n            const url = \"http://localhost:5000/api/feeds\"\n            const {data} = await axios.get(url)\n            if(mounted){\n                setTweets(data)\n            }\n        }\n\n        loadData();\n        return ()=>{\n            setMounted(false)\n        };\n    }, [mounted]);\nconsole.log(tweets);\n    return (\n        <div className=\"homeFeedContainer\">\n            <TweetWrite />\n\n            <div className=\"feed\">{\n                tweets && <div className=\"feed\">\n                    {\n                        tweets.map(tweet=>{\n                            return( <div className=\"feedContent\">\n                                <div className=\"userProf\">\n                                <Avatar alt=\"User\" src=\"../../../public/arch-linux-icon.svg\"></Avatar>\n                                </div>\n                                <div className=\"tweet\">\n                                    <div className=\"user\">\n                                        <h4>User</h4>\n                                        <h5>@user</h5>\n                                    </div>\n                                </div>\n                            </div>)\n                        })\n                    }\n                </div>\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default HomeFeed\n"]},"metadata":{},"sourceType":"module"}